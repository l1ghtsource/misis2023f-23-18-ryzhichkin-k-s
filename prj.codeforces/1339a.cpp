#include <iostream>

void solve() {
  int n = 0; // число, задающее 4n - 2 треугольников
  std::cin >> n; 
  std::cout << n << std::endl; // количество способов полностью покрыть поясоподобную область, состоящую из 4n−2 треугольников, ромбами
}

/* 
Утверждение: для любого n количество способов полностью покрыть поясоподобную область, состоящую из 4n−2 треугольников, ромбами равно n.
Док-во:
1. База индукции:
n = 1 --> 4 * 1 - 2 = 2 треугольника --> 1 ромб --> ans = 1 = n.
2. Предположение индукции (*):
Пусть для n = k: ans = k.
3. Шаг индукции:
Исходя из предположения (*) докажем истинность утверждения для n = k + 1.
4k - 2 --> 4(k+1) - 2 = 4k + 2 => количество треугольников увеличилось на 4
Если фигура, заданная n = k, полностью покрыта ромбами k способами, то для n = k + 1 количество покрытий тоже равно k, т.к
данная конструкция фиксирует количество покрытий для оставшихся двух ромбов.
Уберем крайний справа ромб из конструкции, заданной n = k, тогда появится другой, единственный, способ покрыть оставшуюся область ромбами
Убирание иных ромбов сводится к n --> n - 1 и не меняет количество покрытий.
Таким образом, для n = k + 1: ans = k + 1.
Стало быть, предлоположение индукции верно. :)
*/

int main() {
  int t = 0; // количество тестовых случаев
  std::cin >> t;
  while (t--) {
    solve();
  }
}
